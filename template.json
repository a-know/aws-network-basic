{
  "AWSTemplateFormatVersion" : "2010-09-09",
  "Resources" : {
    "MyVPC" : {
      "Type" : "AWS::EC2::VPC",
      "Properties" : {
        "CidrBlock" : "10.0.0.0/16",
        "EnableDnsSupport" : "true",
        "EnableDnsHostnames" : "true",
        "InstanceTenancy" : "default",
        "Tags" : [ {"Key" : "Name", "Value" : "VPC領域"} ]
      }
    },
    "MyPublicSubnet" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "MyVPC" },
        "CidrBlock" : "10.0.1.0/24",
        "AvailabilityZone" : "ap-northeast-1c",
        "Tags" : [ { "Key" : "Name", "Value" : "パブリックサブネット" } ]
      }
    },
    "MyPrivateSubnet" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "MyVPC" },
        "CidrBlock" : "10.0.2.0/24",
        "AvailabilityZone" : "ap-northeast-1c",
        "Tags" : [ { "Key" : "Name", "Value" : "プライベートサブネット" } ]
      }
    },
    "MyIGW" : {
      "Type" : "AWS::EC2::InternetGateway",
      "Properties" : {
        "Tags" : [ {"Key" : "Name", "Value" : "インターネットゲートウェイ"}]
      }
    },
    "AttachGateway" : {
      "Type" : "AWS::EC2::VPCGatewayAttachment",
      "Properties" : {
        "VpcId" : { "Ref" : "MyVPC" },
        "InternetGatewayId" : { "Ref" : "MyIGW" }
      }
    },
    "MyRouteTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : { "Ref" : "MyVPC" },
        "Tags" : [ { "Key" : "Name", "Value" : "パブリックルートテーブル" } ]
      }
    },
    "MyPrivateRouteTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : { "Ref" : "MyVPC" },
        "Tags" : [ { "Key" : "Name", "Value" : "プライベートルートテーブル" } ]
      }
    },
    "AttachPublicRouteTableToPublicSubnet" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "MyRouteTable" },
        "SubnetId" : { "Ref" : "MyPublicSubnet" }
      }
    },
    "AttachPrivateRouteTableToPrivateSubnet" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "MyPrivateRouteTable" },
        "SubnetId" : { "Ref" : "MyPrivateSubnet" }
      }
    },
    "MyRoute" : {
      "Type" : "AWS::EC2::Route",
      "Properties" : {
        "RouteTableId" : { "Ref" : "MyRouteTable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "GatewayId" : { "Ref" : "MyIGW" }
      }
    },
    "MyPrivateRoute" : {
      "Type" : "AWS::EC2::Route",
      "Properties" : {
        "RouteTableId" : { "Ref" : "MyPrivateRouteTable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "InstanceId" : { "Ref" : "MyNatEC2Instance" }
      }
    },
    "MyPublicSecurityGroup": {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "SecurityGroup for web-server instance in public-subnet",
        "SecurityGroupIngress" : [
          {
             "IpProtocol" : "tcp",
             "FromPort" : "22",
             "ToPort" : "22",
             "CidrIp" : "0.0.0.0/0"
          },
          {
            "IpProtocol" : "tcp",
            "FromPort" : "80",
            "ToPort" : "80",
            "CidrIp" : "0.0.0.0/0"
          },
          {
            "IpProtocol" : "icmp",
            "FromPort" : "-1",
            "ToPort" : "-1",
            "CidrIp" : "0.0.0.0/0"
          }
        ],
        "Tags" :  [ { "Key" : "Name", "Value" : "WEB-SG" } ],
        "VpcId" : { "Ref" : "MyVPC" }
      }
    },
    "MyDatabaseSecurityGroup": {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "SecurityGroup for db-server instance in private-subnet",
        "SecurityGroupIngress" : [
          {
           "IpProtocol" : "tcp",
           "FromPort" : "22",
           "ToPort" : "22",
           "CidrIp" : "0.0.0.0/0"
         },
         {
          "IpProtocol" : "tcp",
          "FromPort" : "3306",
          "ToPort" : "3306",
          "CidrIp" : "0.0.0.0/0"
         },
         {
          "IpProtocol" : "icmp",
          "FromPort" : "-1",
          "ToPort" : "-1",
          "CidrIp" : "0.0.0.0/0"
         }
        ],
        "Tags" :  [ { "Key" : "Name", "Value" : "DB-SG" } ],
        "VpcId" : { "Ref" : "MyVPC" }
      }
    },
    "MyNatSecurityGroup": {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "SecurityGroup for nat-server instance in public-subnet",
        "SecurityGroupIngress" : [
          {
            "IpProtocol" : "tcp",
            "FromPort" : "22",
            "ToPort" : "22",
            "CidrIp" : "10.0.1.10/32"
          },
          {
            "IpProtocol" : "tcp",
            "FromPort" : "80",
            "ToPort" : "80",
            "CidrIp" : "10.0.2.0/24"
          },
          {
            "IpProtocol" : "tcp",
            "FromPort" : "443",
            "ToPort" : "443",
            "CidrIp" : "10.0.2.0/24"
          }
        ],
        "SecurityGroupEgress" : [
          {
            "IpProtocol" : "tcp",
            "FromPort" : "80",
            "ToPort" : "80",
            "CidrIp" : "0.0.0.0/0"
          },
          {
            "IpProtocol" : "tcp",
            "FromPort" : "443",
            "ToPort" : "443",
            "CidrIp" : "0.0.0.0/0"
          }
        ],
        "Tags" :  [ { "Key" : "Name", "Value" : "NAT-SG" } ],
        "VpcId" : { "Ref" : "MyVPC" }
      }
    },
    "MyPublicEC2Instance": {
      "Type" : "AWS::EC2::Instance",
      "Metadata" : {
        "Comment1" : "Configure the bootstrap helpers to install the Apache Web Server",

        "AWS::CloudFormation::Init" : {
          "configSets" : {
            "Install" : [ "Install" ]
          },

          "Install" : {
            "packages" : {
              "yum" : {
                "httpd"        : [],
                "mysql"        : [],
                "php"          : [],
                "php-mysql"    : [],
                "php-mbstring" : []
              }
            },
            "services" : {
              "sysvinit" : {
                "httpd" : { "enabled" : "true", "ensureRunning" : "true" }
              }
            }
          }
        }
      },
      "CreationPolicy" : {
        "ResourceSignal" : {
          "Timeout" : "PT5M"
        }
      },
      "Properties" : {
        "ImageId" : "ami-4985b048",
        "InstanceType" : "t2.nano",
        "KeyName" : "macbook12",
        "Tags" : [
          { "Key" : "Name", "Value" : "Webサーバー" }
        ],
        "UserData" : {
          "Fn::Base64" :
            { "Fn::Join" :
              [
                "",
                [
                  "#!/bin/bash -xe\n",
                  "yum install -y aws-cfn-bootstrap\n",
                  "# Install the files and packages from the metadata\n",
                  "/opt/aws/bin/cfn-init -v ",
                  "         --stack ", { "Ref" : "AWS::StackName" },
                  "         --resource MyPublicEC2Instance ",
                  "         --configsets Install ",
                  "         --region ", { "Ref" : "AWS::Region" },
                  "\n",
                  "# Signal the status from cfn-init\n",
                  "/opt/aws/bin/cfn-signal -e $? ",
                  "         --stack ", { "Ref" : "AWS::StackName" },
                  "         --resource MyPublicEC2Instance ",
                  "         --region ", { "Ref" : "AWS::Region" },
                  "\n"
                ]
              ]
            }
        },
        "NetworkInterfaces": [
          {
            "AssociatePublicIpAddress": "true",
            "DeviceIndex": "0",
            "DeleteOnTermination" : "true",
            "PrivateIpAddress" : "10.0.1.10",
            "SubnetId": { "Ref" : "MyPublicSubnet" },
            "GroupSet": [ { "Ref" : "MyPublicSecurityGroup" } ]
          }
        ],
        "BlockDeviceMappings" : [
          {
            "DeviceName" : "/dev/xvda",
            "Ebs" : {
               "VolumeType" : "standard",
               "DeleteOnTermination" : "true",
               "VolumeSize" : "8"
            }
          }
        ]
      }
    },
    "MyPrivateEC2Instance": {
      "Type" : "AWS::EC2::Instance",
      "Metadata" : {
        "Comment1" : "Configure the bootstrap helpers to install the MySQL Server",

        "AWS::CloudFormation::Init" : {
          "configSets" : {
            "InstallAndRun" : [ "Install", "Configure" ]
          },

          "Install" : {
            "packages" : {
              "yum" : {
                "mysql-server" : []
              }
            },
            "files" : {
              "/tmp/setup.mysql" : {
                "content" : {
                  "Fn::Join" : [
                    "",
                    [
                      "CREATE DATABASE ", "wordpress", " DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;\n",
                      "GRANT ALL ON ", "wordpress", ".* TO ",
                      "wordpress", "@'%' IDENTIFIED BY '", "wordpresspasswd", "';\n",
                      "flush privileges;\n"
                    ]
                  ]
                },
                "mode"  : "000400",
                "owner" : "root",
                "group" : "root"
              },
              "/etc/cfn/cfn-hup.conf" : {
                "content" : {
                  "Fn::Join" : [
                    "",
                    [
                      "[main]\n",
                      "stack=", { "Ref" : "AWS::StackId" }, "\n",
                      "region=", { "Ref" : "AWS::Region" }, "\n"
                    ]
                  ]
                },
                "mode"    : "000400",
                "owner"   : "root",
                "group"   : "root"
              },
              "/etc/cfn/hooks.d/cfn-auto-reloader.conf" : {
                "content": {
                  "Fn::Join" : [
                    "",
                    [
                      "[cfn-auto-reloader-hook]\n",
                      "triggers=post.update\n",
                      "path=Resources.MyPrivateEC2Instance.Metadata.AWS::CloudFormation::Init\n",
                      "action=/opt/aws/bin/cfn-init -v ",
                      "         --stack ", { "Ref" : "AWS::StackName" },
                      "         --resource MyPrivateEC2Instance ",
                      "         --configsets InstallAndRun ",
                      "         --region ", { "Ref" : "AWS::Region" }, "\n",
                      "runas=root\n"
                    ]
                  ]
                }
              }
            },
            "services" : {
              "sysvinit" : {
                "mysqld" : { "enabled" : "true", "ensureRunning" : "true" },
                "cfn-hup" : {
                  "enabled" : "true",
                  "ensureRunning" : "true",
                  "files" : [
                    "/etc/cfn/cfn-hup.conf",
                    "/etc/cfn/hooks.d/cfn-auto-reloader.conf"
                  ]
                }
              }
            }
          },
          "Configure" : {
            "commands" : {
              "01_set_mysql_root_password" : {
                "command" : { "Fn::Join" : ["", ["mysqladmin -u root password '", "p@ssw0rd", "'"]]},
                "test" : { "Fn::Join" : ["", ["$(mysql ", "wordpress", " -u root --password='", "p@ssw0rd", "' >/dev/null 2>&1 </dev/null); (( $? != 0 ))"]]}
              },
              "02_create_database" : {
                "command" : { "Fn::Join" : ["", ["mysql -u root --password='", "p@ssw0rd", "' < /tmp/setup.mysql"]]},
                "test" : { "Fn::Join" : ["", ["$(mysql ", "wordpress", " -u root --password='", "p@ssw0rd", "' >/dev/null 2>&1 </dev/null); (( $? != 0 ))"]]}
              }
            }
          }
        }
      },
      "CreationPolicy" : {
        "ResourceSignal" : {
          "Timeout" : "PT10M"
        }
      },
      "Properties" : {
        "ImageId" : "ami-4985b048",
        "InstanceType" : "t2.micro",
        "KeyName" : "macbook12",
        "Tags" : [
          { "Key" : "Name", "Value" : "DBサーバー" }
        ],
        "UserData" : {
          "Fn::Base64" :
            { "Fn::Join" :
              [
                "",
                [
                  "#!/bin/bash -xe\n",
                  "yum install -y aws-cfn-bootstrap\n",
                  "# Install the files and packages from the metadata\n",
                  "/opt/aws/bin/cfn-init -v ",
                  "         --stack ", { "Ref" : "AWS::StackName" },
                  "         --resource MyPrivateEC2Instance ",
                  "         --configsets InstallAndRun ",
                  "         --region ", { "Ref" : "AWS::Region" },
                  "\n",
                  "# Signal the status from cfn-init\n",
                  "/opt/aws/bin/cfn-signal -e $? ",
                  "         --stack ", { "Ref" : "AWS::StackName" },
                  "         --resource MyPrivateEC2Instance ",
                  "         --region ", { "Ref" : "AWS::Region" },
                  "\n"
                ]
              ]
            }
        },
        "NetworkInterfaces": [
          {
            "AssociatePublicIpAddress": "false",
            "DeviceIndex": "0",
            "DeleteOnTermination" : "true",
            "PrivateIpAddress" : "10.0.2.10",
            "SubnetId": { "Ref" : "MyPrivateSubnet" },
            "GroupSet": [ { "Ref" : "MyDatabaseSecurityGroup" } ]
          }
        ],
        "BlockDeviceMappings" : [
          {
            "DeviceName" : "/dev/xvda",
            "Ebs" : {
               "VolumeType" : "standard",
               "DeleteOnTermination" : "true",
               "VolumeSize" : "8"
            }
          }
        ]
      }
    },
    "MyNatEC2Instance": {
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
        "ImageId" : "ami-2f0f6448",
        "InstanceType" : "t2.nano",
        "KeyName" : "macbook12",
        "SourceDestCheck" : false,
        "Tags" : [
          { "Key" : "Name", "Value" : "NATサーバー" }
        ],
        "NetworkInterfaces": [
          {
            "AssociatePublicIpAddress": "true",
            "DeviceIndex": "0",
            "DeleteOnTermination" : "true",
            "PrivateIpAddress" : "10.0.1.20",
            "SubnetId": { "Ref" : "MyPublicSubnet" },
            "GroupSet": [ { "Ref" : "MyNatSecurityGroup" } ]
          }
        ],
        "BlockDeviceMappings" : [
          {
            "DeviceName" : "/dev/xvda",
            "Ebs" : {
               "VolumeType" : "standard",
               "DeleteOnTermination" : "true",
               "VolumeSize" : "8"
            }
          }
        ]
      }
    },
    "MyElasticLoadBalancer": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties": {
        "Scheme": "internet-facing",
        "SecurityGroups": [ { "Ref" : "MyPublicSecurityGroup" } ],
        "LoadBalancerName" : "MyElasticLoadBalancer",
        "Subnets" : [ { "Ref" : "MyPublicSubnet" } ],
        "Instances" : [ { "Ref" : "MyPublicEC2Instance" } ],
        "Tags" : [
          { "Key" : "Name", "Value" : "ELB" }
        ],
        "Listeners": [{
          "LoadBalancerPort": "80",
          "InstancePort": "80",
          "Protocol": "HTTP"
        }],
        "HealthCheck": {
          "Target": "HTTP:80/",
          "HealthyThreshold": "3",
          "UnhealthyThreshold": "5",
          "Interval": "30",
          "Timeout": "5"
        }
      }
    }
  },
}
